[package]
name = "ics10-grandpa-cw"
version = "0.1.0"
authors = ["Composable Developers"]
edition = "2021"

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

[lib]
crate-type = ["cdylib", "rlib"]

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/rust-optimizer:0.12.6
"""

[dependencies]
cosmwasm-schema = { workspace = true }
cosmwasm-std = { workspace = true }
cw-storage-plus = { workspace = true }
schemars = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
sha2 = { workspace = true }
sha3 = { workspace = true }
derive_more = { workspace = true }

ibc = { workspace = true, default-features = false }
ibc-derive = { workspace = true, default-features = false }
ibc-proto = { workspace = true, default-features = false, features = ["json-schema"] }
ics23 = { workspace = true }
ics10-grandpa = { workspace = true, default-features = false }
grandpa-light-client-primitives = {workspace = true, default-features = false }
light-client-common = { workspace = true, default-features = false  }
ics08-wasm = { workspace = true, default-features = false, features = ["cosmwasm"] }
sp-core = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false, features = ["disable_panic_handler", "disable_oom", "disable_allocator"] }
sp-runtime-interface = { workspace = true, default-features = false, features = [] }
prost = { workspace = true }
blake2-rfc = { workspace = true, default-features = false }
ed25519-zebra = { workspace = true, default-features = false }
twox-hash = { workspace = true, default-features = false, features = ["digest_0_10"] }
byteorder = { workspace = true, default-features = false }
digest = { workspace = true, default-features = false }
hex = { workspace = true }
tendermint-proto = { workspace = true }
finality-grandpa = { workspace = true, default-features = false }

[dev-dependencies]
cw-multi-test = { workspace = true }
hex = { workspace = true }
pallet-ibc = { workspace = true }
serde-json-wasm = { workspace = true, default-features = false }
serde_json = { workspace = true, default-features = false }

[features]
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
# use library feature to disable all instantiate/execute/query exports
library = []
default = []
std = [
	"blake2-rfc/std",
	"byteorder/std",
	"digest/std",
	"ed25519-zebra/std",
	"finality-grandpa/std",
	"grandpa-light-client-primitives/std",
	"hex/std",
	"ibc/std",
	"ibc-proto/std",
	"ics08-wasm/std",
	"ics10-grandpa/std",
	"ics23/std",
	"light-client-common/std",
	"pallet-ibc/std",
	"prost/std",
	"serde/std",
	"serde_json/std",
	"sha2/std",
	"sha3/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-runtime-interface/std",
	"sp-std/std",
	"twox-hash/std"
]
test = [
  "sp-io/std",
  "sp-runtime/std",
  "sp-runtime-interface/std",
  "sp-core/std",
  "ics10-grandpa/std",
  "grandpa-light-client-primitives/std",
  "light-client-common/std",
  "std"
]
